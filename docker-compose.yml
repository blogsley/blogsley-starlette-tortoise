networks:
  blogsley:
    driver: bridge

volumes:
  db:
  letsencrypt:

services:
  # server
  web:
    build:
      context: ./server
    links:
      - db
      - s3
    env_file: ./config/.env
    environment:
      - IN_DOCKER=true
    hostname: web.${BLOGSLEY_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.middlewares=test-compress"
      - "traefik.http.middlewares.test-compress.compress=true"
    ports:
      - 4000:4000
    networks:
      - blogsley
    restart: "no"
    volumes:
      - "./server:/app"

  # Database
  db:
    image: postgres:13.5-bullseye
    env_file: ./config/.env
    environment:
      - PGDATA=/pg-data
    ports:
      - 5432:5432
    volumes:
      - db:/pg-data
    networks:
      - blogsley

  # Traffic
  traefik:
    image: "traefik:v2.8.3"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.le.acme.email=kurtis@political-revolution.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"

    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - blogsley
